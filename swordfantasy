local RunService = game:GetService("RunService")
local Player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")

-- Libraries
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/FabsKebabs/load/refs/heads/main/Source')))()

local Window = OrionLib:MakeWindow({
    Name = [[<font color="rgb(255,0,0)">Publoader-Sword Fantasy</font>]],
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "Subscribe To Pubzy"
})

local Tab1 = Window:MakeTab({Name = "Main", Icon = "", PremiumOnly = false})
local Tab2 = Window:MakeTab({Name = "Teleports", Icon = "", PremiumOnly = false})
local Tab4 = Window:MakeTab({Name = "Bosses", Icon = "", PremiumOnly = false})

-- State Variables
local AutoClickEnabled = false
local AntiAFKEnabled = false
local SpeedToggleEnabled = false

local NormalWalkSpeed = 16
local BoostedWalkSpeed = 50

-- Connections
local autoClickConnection = nil
local antiAFKConnection = nil

-- ====== AUTOFUNCTIONS ======
local function autoClick()
    if autoClickConnection then autoClickConnection:Disconnect() end
    if AutoClickEnabled then
        OrionLib:MakeNotification({
            Name = "Auto Click Enabled",
            Content = "Press Backspace to stop autoclick.",
            Time = 3
        })
        autoClickConnection = RunService.Heartbeat:Connect(function()
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
        end)
    end
end

local function antiAFK()
    if antiAFKConnection then antiAFKConnection:Disconnect() end
    if AntiAFKEnabled then
        OrionLib:MakeNotification({
            Name = "Anti-AFK Activated",
            Content = "You will not be kicked for being idle!",
            Time = 3
        })
        antiAFKConnection = spawn(function()
            while AntiAFKEnabled do
                wait(60) -- Every 60 seconds
                local virtualUser = game:GetService("VirtualUser")
                virtualUser:CaptureController()
                virtualUser:ClickButton2(Vector2.new())
            end
        end)
    end
end

-- ====== WALKSPEED ======
local function forceWalkSpeed()
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        local humanoid = Player.Character.Humanoid
        if SpeedToggleEnabled and humanoid.WalkSpeed ~= BoostedWalkSpeed then
            humanoid.WalkSpeed = BoostedWalkSpeed
        elseif not SpeedToggleEnabled and humanoid.WalkSpeed ~= NormalWalkSpeed then
            humanoid.WalkSpeed = NormalWalkSpeed
        end
    end
end

Player.CharacterAdded:Connect(function()
    wait(1)
    forceWalkSpeed()
end)

-- ====== TOGGLES ======
Tab1:AddToggle({
    Name = "Autoclick (100ms)",
    Default = false,
    Callback = function(Value)
        AutoClickEnabled = Value
        autoClick()
    end
})

Tab1:AddToggle({
    Name = "Anti-AFK",
    Default = false,
    Callback = function(Value)
        AntiAFKEnabled = Value
        antiAFK()
    end
})

Tab1:AddToggle({
    Name = "WalkSpeed Toggle (50)",
    Default = false,
    Callback = function(Value)
        SpeedToggleEnabled = Value
        forceWalkSpeed()
    end
})

-- Stop Autoclick with Backspace
UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Backspace then
        AutoClickEnabled = false
        if autoClickConnection then
            autoClickConnection:Disconnect()
            autoClickConnection = nil
        end
        OrionLib:MakeNotification({
            Name = "Autoclick Stopped",
            Content = "Autoclick has been stopped!",
            Time = 2
        })
    end
end)

-- RunService Heartbeat to enforce WalkSpeed
RunService.Heartbeat:Connect(function()
    if SpeedToggleEnabled then
        forceWalkSpeed()
    end
end)
