local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/FabsKebabs/load/refs/heads/main/Source')))()

local Window = OrionLib:MakeWindow({
    Name = [[<font color="rgb(255,0,0)">Publoader-Sword Fantasy</font>]],
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "Subscribe To Pubzy"
})

local Tab1 = Window:MakeTab({Name = "Main", Icon = "", PremiumOnly = false})
local Tab2 = Window:MakeTab({Name = "Teleports", Icon = "", PremiumOnly = false})
local Tab3 = Window:MakeTab({Name = "Auto Farm", Icon = "", PremiumOnly = false})
local Tab4 = Window:MakeTab({Name = "Bosses", Icon = "", PremiumOnly = false})  -- New Bosses Tab
local Tab5 = Window:MakeTab({
    Name = "Settings",
    Icon = "",
    PremiumOnly = false
})

local Player = game.Players.LocalPlayer
local UIS = game:GetService("UserInputService")

local AutoClickEnabled = false
local FreezeEnabled = false
local AntiAFKEnabled = false

-- Freeze Player Function
local function freezePlayer()
    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = Player.Character.HumanoidRootPart
        hrp.Anchored = FreezeEnabled
    end
end

-- Autoclick Function
local function autoClick()
    spawn(function()
        OrionLib:MakeNotification({
            Name = "Auto Click Enabled",
            Content = "Press '=' and Backspace to stop autoclick",
            Time = 3
        })
        while AutoClickEnabled do
            wait(0.1) -- 100ms delay
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, true, game, 1)
            game:GetService("VirtualInputManager"):SendMouseButtonEvent(0, 0, 0, false, game, 1)
        end
    end)
end

-- Anti-AFK System (toggleable)
local function antiAFK()
    if AntiAFKEnabled then
        spawn(function()
            while AntiAFKEnabled do
                wait(60)
                local virtualUser = game:service("VirtualUser")
                virtualUser:CaptureController()
                virtualUser:ClickButton2(Vector2.new())
            end
        end)
        OrionLib:MakeNotification({
            Name = "Anti-AFK Activated",
            Content = "You will not be kicked for being idle!",
            Time = 3
        })
    else
        -- Deactivate anti-AFK
        OrionLib:MakeNotification({
            Name = "Anti-AFK Deactivated",
            Content = "You will be kicked for inactivity.",
            Time = 3
        })
    end
end

-- Stop Autoclick when '=' and Backspace are pressed together
UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if UIS:IsKeyDown(Enum.KeyCode.Equals) and input.KeyCode == Enum.KeyCode.Backspace then
            AutoClickEnabled = false
            OrionLib:MakeNotification({
                Name = "Autoclick Stopped",
                Content = "Autoclick has been stopped!",
                Time = 2
            })
        end
    end
end)

-- Main Tab Elements
Tab1:AddToggle({
    Name = "Freeze Player",
    Default = false,
    Callback = function(Value)
        FreezeEnabled = Value
        freezePlayer()
    end
})

Tab1:AddToggle({
    Name = "Autoclick (100ms)",
    Default = false,
    Callback = function(Value)
        AutoClickEnabled = Value
        if AutoClickEnabled then
            autoClick()
        end
    end
})

Tab1:AddToggle({
    Name = "Anti-AFK",
    Default = false,
    Callback = function(Value)
        AntiAFKEnabled = Value  -- Toggle Anti-AFK
        antiAFK()  -- Apply the change
    end
})

-- Teleports Tab
local function teleportTo(position)
    if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") then
        Player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
    end
end

Tab2:AddButton({
    Name = "Spawn",
    Callback = function()
        teleportTo(Vector3.new(-54, 29, -1311))
    end
})

Tab2:AddButton({
    Name = "Wolf Forest",
    Callback = function()
        teleportTo(Vector3.new(-19, 29, -1996))
    end
})

Tab2:AddButton({
    Name = "Spider Cave",
    Callback = function()
        teleportTo(Vector3.new(-221, 29, -2478))
    end
})

Tab2:AddButton({
    Name = "Bee Forest",
    Callback = function()
        teleportTo(Vector3.new(696, 87, -2358))
    end
})

Tab2:AddButton({
    Name = "Crab Beach",
    Callback = function()
        teleportTo(Vector3.new(1401, 33, -1512))
    end
})

Tab2:AddButton({
    Name = "Castle",
    Callback = function()
        teleportTo(Vector3.new(449, 349, -2598))
    end
})

-- Bosses Tab (New)
Tab4:AddButton({
    Name = "Crab Boss",
    Callback = function()
        teleportTo(Vector3.new(6750, -1, 1009))  -- Crab Boss position
    end
})

Tab4:AddButton({
    Name = "Wolf Boss",
    Callback = function()
        teleportTo(Vector3.new(5000, 29, -2500))  -- Wolf Boss position (example)
    end
})

Tab4:AddButton({
    Name = "Spider Boss",
    Callback = function()
        teleportTo(Vector3.new(6000, 29, -3000))  -- Spider Boss position (example)
    end
})

-- Add FPS Toggle in Settings Tab
local FPSLimitEnabled = false
Tab5:AddToggle({
    Name = "Limit FPS",
    Default = false,
    Callback = function(Value)
        FPSLimitEnabled = Value
        if FPSLimitEnabled then
            -- Limit the FPS to a desired number (e.g., 60 FPS)
            game:GetService('RunService'):Set3dRenderingEnabled(false)  -- Disable rendering to limit FPS
            OrionLib:MakeNotification({
                Name = "FPS Limit Enabled",
                Content = "FPS has been limited to 60.",
                Time = 3
            })
        else
            -- Reset FPS limit (restore normal FPS)
            game:GetService('RunService'):Set3dRenderingEnabled(true)   -- Enable rendering for higher FPS
            OrionLib:MakeNotification({
                Name = "FPS Limit Disabled",
                Content = "FPS is now unrestricted.",
                Time = 3
            })
        end
    end
})

-- Optional: Display spoofed HWID in the UI (if needed for debugging or info)
Tab5:AddLabel({
    Name = "Spoofed HWID",
    Default = "None",  -- Initial label text
    Callback = function()
        -- Dynamically update the label based on the spoofed HWID
        if spoofedHWID then
            return spoofedHWID  -- Show the spoofed HWID
        else
            return "No HWID spoofing active"
        end
    end
})

